// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "11/04/2020 10:42:35"
                                                                                
// Verilog Test Bench template for design : exp8_0
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module exp8_0_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk;
reg in;
reg reset;
// wires                                               
wire out;

// assign statements (if any)                          
exp8_0 i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.in(in),
	.out(out),
	.reset(reset)
);
initial
begin
 clk=0;
 in=0;reset=1;#3;
 in=1;reset=0;#3;
 in=0;#9;
 in=0;#8;
 in=0;#5;
 in=1;#4;
 in=1;#3;
 in=1;#3;
 in=1;#9;
 in=1;#8;
 in=0;#5;
 in=1;#4;

 $stop;
end
 always
begin
 #1; clk=~clk;
end 
endmodule

